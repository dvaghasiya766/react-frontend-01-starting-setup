{"ast":null,"code":"/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport { fontWeights, getFontParameters } from '../css.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../has.js';\nimport { clear } from '../obj.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\nconst genericFontFamilies = new Set(['serif', 'sans-serif', 'monospace', 'cursive', 'fantasy', 'system-ui', 'ui-serif', 'ui-sans-serif', 'ui-monospace', 'ui-rounded', 'emoji', 'math', 'fangsong']);\n\n/**\n * @param {string} style Css font-style\n * @param {string} weight Css font-weight\n * @param {string} family Css font-family\n * @return {string} Font key.\n */\nfunction getFontKey(style, weight, family) {\n  return `${style} ${weight} 16px \"${family}\"`;\n}\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = function () {\n  const retries = 100;\n  let timeout, fontFaceSet;\n\n  /**\n   * @param {string} fontSpec Css font spec\n   * @return {Promise<boolean>} Font with style and weight is available\n   */\n  async function isAvailable(fontSpec) {\n    await fontFaceSet.ready;\n    const fontFaces = await fontFaceSet.load(fontSpec);\n    if (fontFaces.length === 0) {\n      return false;\n    }\n    const font = getFontParameters(fontSpec);\n    const checkFamily = font.families[0].toLowerCase();\n    const checkWeight = font.weight;\n    return fontFaces.some(\n    /**\n     * @param {import('../css.js').FontParameters} f Font.\n     * @return {boolean} Font matches.\n     */\n    f => {\n      const family = f.family.replace(/^['\"]|['\"]$/g, '').toLowerCase();\n      const weight = fontWeights[f.weight] || f.weight;\n      return family === checkFamily && f.style === font.style && weight == checkWeight;\n    });\n  }\n  async function check() {\n    await fontFaceSet.ready;\n    let done = true;\n    const checkedFontsProperties = checkedFonts.getProperties();\n    const fonts = Object.keys(checkedFontsProperties).filter(key => checkedFontsProperties[key] < retries);\n    for (let i = fonts.length - 1; i >= 0; --i) {\n      const font = fonts[i];\n      let currentRetries = checkedFontsProperties[font];\n      if (currentRetries < retries) {\n        if (await isAvailable(font)) {\n          clear(textHeights);\n          checkedFonts.set(font, retries);\n        } else {\n          currentRetries += 10;\n          checkedFonts.set(font, currentRetries, true);\n          if (currentRetries < retries) {\n            done = false;\n          }\n        }\n      }\n    }\n    timeout = undefined;\n    if (!done) {\n      timeout = setTimeout(check, 100);\n    }\n  }\n  return async function (fontSpec) {\n    if (!fontFaceSet) {\n      fontFaceSet = WORKER_OFFSCREEN_CANVAS ? self.fonts : document.fonts;\n    }\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    let needCheck = false;\n    for (const family of families) {\n      if (genericFontFamilies.has(family)) {\n        continue;\n      }\n      const key = getFontKey(font.style, font.weight, family);\n      if (checkedFonts.get(key) !== undefined) {\n        continue;\n      }\n      checkedFonts.set(key, 0, true);\n      needCheck = true;\n    }\n    if (needCheck) {\n      clearTimeout(timeout);\n      timeout = setTimeout(check, 100);\n    }\n  };\n}();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Å½g');\n        const lineHeight = isNaN(Number(font.lineHeight)) ? 1.2 : Number(font.lineHeight);\n        height = lineHeight * (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n}();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text.split('\\n').reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {\n    width,\n    height,\n    widths,\n    heights,\n    lineWidths\n  };\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(context, transform, opacity, labelOrImage, originX, originY, w, h, x, y, scale) {\n  context.save();\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = context => context.globalAlpha *= opacity;\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n  if (/** @type {*} */labelOrImage.contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */labelOrImage, context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(/** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */\n    labelOrImage, originX, originY, w, h, 0, 0, w, h);\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(/** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */\n    labelOrImage, originX, originY, w, h, x, y, w * scale[0], h * scale[1]);\n  }\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(context, contextInstructions[i + 1]);\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}","map":{"version":3,"names":["BaseObject","fontWeights","getFontParameters","createCanvasContext2D","WORKER_OFFSCREEN_CANVAS","clear","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureContext","measureFont","textHeights","genericFontFamilies","Set","getFontKey","style","weight","family","registerFont","retries","timeout","fontFaceSet","isAvailable","fontSpec","ready","fontFaces","load","length","font","checkFamily","families","toLowerCase","checkWeight","some","f","replace","check","done","checkedFontsProperties","getProperties","fonts","Object","keys","filter","key","i","currentRetries","set","undefined","setTimeout","self","document","needCheck","has","get","clearTimeout","measureTextHeight","measureElement","height","metrics","measureText","lineHeight","isNaN","Number","actualBoundingBoxAscent","actualBoundingBoxDescent","createElement","innerHTML","minHeight","maxHeight","padding","border","position","display","left","body","appendChild","offsetHeight","removeChild","text","measureTextWidth","width","measureAndCacheTextWidth","cache","split","reduce","prev","curr","Math","max","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","ii","push","currentWidth","currentHeight","rotateAtOffset","context","rotation","offsetX","offsetY","translate","rotate","drawImageOrLabel","transform","opacity","labelOrImage","originX","originY","w","h","x","y","scale","save","globalAlpha","apply","contextInstructions","executeLabelInstructions","drawImage","restore","label","Array","isArray"],"sources":["F:/Dev/Tutorial/React/Udemy/react-frontend-01-starting-setup/node_modules/ol/render/canvas.js"],"sourcesContent":["/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {fontWeights, getFontParameters} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\nconst genericFontFamilies = new Set([\n  'serif',\n  'sans-serif',\n  'monospace',\n  'cursive',\n  'fantasy',\n  'system-ui',\n  'ui-serif',\n  'ui-sans-serif',\n  'ui-monospace',\n  'ui-rounded',\n  'emoji',\n  'math',\n  'fangsong',\n]);\n\n/**\n * @param {string} style Css font-style\n * @param {string} weight Css font-weight\n * @param {string} family Css font-family\n * @return {string} Font key.\n */\nfunction getFontKey(style, weight, family) {\n  return `${style} ${weight} 16px \"${family}\"`;\n}\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  let timeout, fontFaceSet;\n\n  /**\n   * @param {string} fontSpec Css font spec\n   * @return {Promise<boolean>} Font with style and weight is available\n   */\n  async function isAvailable(fontSpec) {\n    await fontFaceSet.ready;\n    const fontFaces = await fontFaceSet.load(fontSpec);\n    if (fontFaces.length === 0) {\n      return false;\n    }\n    const font = getFontParameters(fontSpec);\n    const checkFamily = font.families[0].toLowerCase();\n    const checkWeight = font.weight;\n    return fontFaces.some(\n      /**\n       * @param {import('../css.js').FontParameters} f Font.\n       * @return {boolean} Font matches.\n       */\n      (f) => {\n        const family = f.family.replace(/^['\"]|['\"]$/g, '').toLowerCase();\n        const weight = fontWeights[f.weight] || f.weight;\n        return (\n          family === checkFamily &&\n          f.style === font.style &&\n          weight == checkWeight\n        );\n      },\n    );\n  }\n\n  async function check() {\n    await fontFaceSet.ready;\n    let done = true;\n    const checkedFontsProperties = checkedFonts.getProperties();\n    const fonts = Object.keys(checkedFontsProperties).filter(\n      (key) => checkedFontsProperties[key] < retries,\n    );\n    for (let i = fonts.length - 1; i >= 0; --i) {\n      const font = fonts[i];\n      let currentRetries = checkedFontsProperties[font];\n      if (currentRetries < retries) {\n        if (await isAvailable(font)) {\n          clear(textHeights);\n          checkedFonts.set(font, retries);\n        } else {\n          currentRetries += 10;\n          checkedFonts.set(font, currentRetries, true);\n          if (currentRetries < retries) {\n            done = false;\n          }\n        }\n      }\n    }\n    timeout = undefined;\n    if (!done) {\n      timeout = setTimeout(check, 100);\n    }\n  }\n\n  return async function (fontSpec) {\n    if (!fontFaceSet) {\n      fontFaceSet = WORKER_OFFSCREEN_CANVAS ? self.fonts : document.fonts;\n    }\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    let needCheck = false;\n    for (const family of families) {\n      if (genericFontFamilies.has(family)) {\n        continue;\n      }\n      const key = getFontKey(font.style, font.weight, family);\n      if (checkedFonts.get(key) !== undefined) {\n        continue;\n      }\n      checkedFonts.set(key, 0, true);\n      needCheck = true;\n    }\n    if (needCheck) {\n      clearTimeout(timeout);\n      timeout = setTimeout(check, 100);\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Å½g');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,UAAU,MAAM,cAAc;AACrC,SAAQC,WAAW,EAAEC,iBAAiB,QAAO,WAAW;AACxD,SAAQC,qBAAqB,QAAO,WAAW;AAC/C,SAAQC,uBAAuB,QAAO,WAAW;AACjD,SAAQC,KAAK,QAAO,WAAW;;AAE/B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO,MAAMC,WAAW,GAAG,iBAAiB;;AAE5C;AACA;AACA;AACA;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;;AAEtC;AACA;AACA;AACA;AACA,OAAO,MAAMC,cAAc,GAAG,OAAO;;AAErC;AACA;AACA;AACA;AACA,OAAO,MAAMC,eAAe,GAAG,EAAE;;AAEjC;AACA;AACA;AACA;AACA,OAAO,MAAMC,qBAAqB,GAAG,CAAC;;AAEtC;AACA;AACA;AACA;AACA,OAAO,MAAMC,eAAe,GAAG,OAAO;;AAEtC;AACA;AACA;AACA;AACA,OAAO,MAAMC,iBAAiB,GAAG,EAAE;;AAEnC;AACA;AACA;AACA;AACA,OAAO,MAAMC,kBAAkB,GAAG,MAAM;;AAExC;AACA;AACA;AACA;AACA,OAAO,MAAMC,gBAAgB,GAAG,QAAQ;;AAExC;AACA;AACA;AACA;AACA,OAAO,MAAMC,mBAAmB,GAAG,QAAQ;;AAE3C;AACA;AACA;AACA;AACA,OAAO,MAAMC,cAAc,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;AAE1C;AACA;AACA;AACA;AACA,OAAO,MAAMC,gBAAgB,GAAG,CAAC;;AAEjC;AACA;AACA;AACA,OAAO,MAAMC,YAAY,GAAG,IAAIlB,UAAU,CAAC,CAAC;;AAE5C;AACA;AACA;AACA,IAAImB,cAAc,GAAG,IAAI;;AAEzB;AACA;AACA;AACA,IAAIC,WAAW;;AAEf;AACA;AACA;AACA,OAAO,MAAMC,WAAW,GAAG,CAAC,CAAC;AAE7B,MAAMC,mBAAmB,GAAG,IAAIC,GAAG,CAAC,CAClC,OAAO,EACP,YAAY,EACZ,WAAW,EACX,SAAS,EACT,SAAS,EACT,WAAW,EACX,UAAU,EACV,eAAe,EACf,cAAc,EACd,YAAY,EACZ,OAAO,EACP,MAAM,EACN,UAAU,CACX,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,UAAUA,CAACC,KAAK,EAAEC,MAAM,EAAEC,MAAM,EAAE;EACzC,OAAO,GAAGF,KAAK,IAAIC,MAAM,UAAUC,MAAM,GAAG;AAC9C;;AAEA;AACA;AACA;AACA;AACA,OAAO,MAAMC,YAAY,GAAI,YAAY;EACvC,MAAMC,OAAO,GAAG,GAAG;EACnB,IAAIC,OAAO,EAAEC,WAAW;;EAExB;AACF;AACA;AACA;EACE,eAAeC,WAAWA,CAACC,QAAQ,EAAE;IACnC,MAAMF,WAAW,CAACG,KAAK;IACvB,MAAMC,SAAS,GAAG,MAAMJ,WAAW,CAACK,IAAI,CAACH,QAAQ,CAAC;IAClD,IAAIE,SAAS,CAACE,MAAM,KAAK,CAAC,EAAE;MAC1B,OAAO,KAAK;IACd;IACA,MAAMC,IAAI,GAAGpC,iBAAiB,CAAC+B,QAAQ,CAAC;IACxC,MAAMM,WAAW,GAAGD,IAAI,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IAClD,MAAMC,WAAW,GAAGJ,IAAI,CAACZ,MAAM;IAC/B,OAAOS,SAAS,CAACQ,IAAI;IACnB;AACN;AACA;AACA;IACOC,CAAC,IAAK;MACL,MAAMjB,MAAM,GAAGiB,CAAC,CAACjB,MAAM,CAACkB,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,CAACJ,WAAW,CAAC,CAAC;MACjE,MAAMf,MAAM,GAAGzB,WAAW,CAAC2C,CAAC,CAAClB,MAAM,CAAC,IAAIkB,CAAC,CAAClB,MAAM;MAChD,OACEC,MAAM,KAAKY,WAAW,IACtBK,CAAC,CAACnB,KAAK,KAAKa,IAAI,CAACb,KAAK,IACtBC,MAAM,IAAIgB,WAAW;IAEzB,CACF,CAAC;EACH;EAEA,eAAeI,KAAKA,CAAA,EAAG;IACrB,MAAMf,WAAW,CAACG,KAAK;IACvB,IAAIa,IAAI,GAAG,IAAI;IACf,MAAMC,sBAAsB,GAAG9B,YAAY,CAAC+B,aAAa,CAAC,CAAC;IAC3D,MAAMC,KAAK,GAAGC,MAAM,CAACC,IAAI,CAACJ,sBAAsB,CAAC,CAACK,MAAM,CACrDC,GAAG,IAAKN,sBAAsB,CAACM,GAAG,CAAC,GAAGzB,OACzC,CAAC;IACD,KAAK,IAAI0B,CAAC,GAAGL,KAAK,CAACb,MAAM,GAAG,CAAC,EAAEkB,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;MAC1C,MAAMjB,IAAI,GAAGY,KAAK,CAACK,CAAC,CAAC;MACrB,IAAIC,cAAc,GAAGR,sBAAsB,CAACV,IAAI,CAAC;MACjD,IAAIkB,cAAc,GAAG3B,OAAO,EAAE;QAC5B,IAAI,MAAMG,WAAW,CAACM,IAAI,CAAC,EAAE;UAC3BjC,KAAK,CAACgB,WAAW,CAAC;UAClBH,YAAY,CAACuC,GAAG,CAACnB,IAAI,EAAET,OAAO,CAAC;QACjC,CAAC,MAAM;UACL2B,cAAc,IAAI,EAAE;UACpBtC,YAAY,CAACuC,GAAG,CAACnB,IAAI,EAAEkB,cAAc,EAAE,IAAI,CAAC;UAC5C,IAAIA,cAAc,GAAG3B,OAAO,EAAE;YAC5BkB,IAAI,GAAG,KAAK;UACd;QACF;MACF;IACF;IACAjB,OAAO,GAAG4B,SAAS;IACnB,IAAI,CAACX,IAAI,EAAE;MACTjB,OAAO,GAAG6B,UAAU,CAACb,KAAK,EAAE,GAAG,CAAC;IAClC;EACF;EAEA,OAAO,gBAAgBb,QAAQ,EAAE;IAC/B,IAAI,CAACF,WAAW,EAAE;MAChBA,WAAW,GAAG3B,uBAAuB,GAAGwD,IAAI,CAACV,KAAK,GAAGW,QAAQ,CAACX,KAAK;IACrE;IACA,MAAMZ,IAAI,GAAGpC,iBAAiB,CAAC+B,QAAQ,CAAC;IACxC,IAAI,CAACK,IAAI,EAAE;MACT;IACF;IACA,MAAME,QAAQ,GAAGF,IAAI,CAACE,QAAQ;IAC9B,IAAIsB,SAAS,GAAG,KAAK;IACrB,KAAK,MAAMnC,MAAM,IAAIa,QAAQ,EAAE;MAC7B,IAAIlB,mBAAmB,CAACyC,GAAG,CAACpC,MAAM,CAAC,EAAE;QACnC;MACF;MACA,MAAM2B,GAAG,GAAG9B,UAAU,CAACc,IAAI,CAACb,KAAK,EAAEa,IAAI,CAACZ,MAAM,EAAEC,MAAM,CAAC;MACvD,IAAIT,YAAY,CAAC8C,GAAG,CAACV,GAAG,CAAC,KAAKI,SAAS,EAAE;QACvC;MACF;MACAxC,YAAY,CAACuC,GAAG,CAACH,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC;MAC9BQ,SAAS,GAAG,IAAI;IAClB;IACA,IAAIA,SAAS,EAAE;MACbG,YAAY,CAACnC,OAAO,CAAC;MACrBA,OAAO,GAAG6B,UAAU,CAACb,KAAK,EAAE,GAAG,CAAC;IAClC;EACF,CAAC;AACH,CAAC,CAAE,CAAC;;AAEJ;AACA;AACA;AACA;AACA,OAAO,MAAMoB,iBAAiB,GAAI,YAAY;EAC5C;AACF;AACA;EACE,IAAIC,cAAc;EAClB,OAAO,UAAUlC,QAAQ,EAAE;IACzB,IAAImC,MAAM,GAAG/C,WAAW,CAACY,QAAQ,CAAC;IAClC,IAAImC,MAAM,IAAIV,SAAS,EAAE;MACvB,IAAItD,uBAAuB,EAAE;QAC3B,MAAMkC,IAAI,GAAGpC,iBAAiB,CAAC+B,QAAQ,CAAC;QACxC,MAAMoC,OAAO,GAAGC,WAAW,CAACrC,QAAQ,EAAE,IAAI,CAAC;QAC3C,MAAMsC,UAAU,GAAGC,KAAK,CAACC,MAAM,CAACnC,IAAI,CAACiC,UAAU,CAAC,CAAC,GAC7C,GAAG,GACHE,MAAM,CAACnC,IAAI,CAACiC,UAAU,CAAC;QAC3BH,MAAM,GACJG,UAAU,IACTF,OAAO,CAACK,uBAAuB,GAAGL,OAAO,CAACM,wBAAwB,CAAC;MACxE,CAAC,MAAM;QACL,IAAI,CAACR,cAAc,EAAE;UACnBA,cAAc,GAAGN,QAAQ,CAACe,aAAa,CAAC,KAAK,CAAC;UAC9CT,cAAc,CAACU,SAAS,GAAG,GAAG;UAC9BV,cAAc,CAAC1C,KAAK,CAACqD,SAAS,GAAG,GAAG;UACpCX,cAAc,CAAC1C,KAAK,CAACsD,SAAS,GAAG,MAAM;UACvCZ,cAAc,CAAC1C,KAAK,CAAC2C,MAAM,GAAG,MAAM;UACpCD,cAAc,CAAC1C,KAAK,CAACuD,OAAO,GAAG,GAAG;UAClCb,cAAc,CAAC1C,KAAK,CAACwD,MAAM,GAAG,MAAM;UACpCd,cAAc,CAAC1C,KAAK,CAACyD,QAAQ,GAAG,UAAU;UAC1Cf,cAAc,CAAC1C,KAAK,CAAC0D,OAAO,GAAG,OAAO;UACtChB,cAAc,CAAC1C,KAAK,CAAC2D,IAAI,GAAG,UAAU;QACxC;QACAjB,cAAc,CAAC1C,KAAK,CAACa,IAAI,GAAGL,QAAQ;QACpC4B,QAAQ,CAACwB,IAAI,CAACC,WAAW,CAACnB,cAAc,CAAC;QACzCC,MAAM,GAAGD,cAAc,CAACoB,YAAY;QACpC1B,QAAQ,CAACwB,IAAI,CAACG,WAAW,CAACrB,cAAc,CAAC;MAC3C;MACA9C,WAAW,CAACY,QAAQ,CAAC,GAAGmC,MAAM;IAChC;IACA,OAAOA,MAAM;EACf,CAAC;AACH,CAAC,CAAE,CAAC;;AAEJ;AACA;AACA;AACA;AACA;AACA,SAASE,WAAWA,CAAChC,IAAI,EAAEmD,IAAI,EAAE;EAC/B,IAAI,CAACtE,cAAc,EAAE;IACnBA,cAAc,GAAGhB,qBAAqB,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9C;EACA,IAAImC,IAAI,IAAIlB,WAAW,EAAE;IACvBD,cAAc,CAACmB,IAAI,GAAGA,IAAI;IAC1BlB,WAAW,GAAGD,cAAc,CAACmB,IAAI;EACnC;EACA,OAAOnB,cAAc,CAACmD,WAAW,CAACmB,IAAI,CAAC;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,gBAAgBA,CAACpD,IAAI,EAAEmD,IAAI,EAAE;EAC3C,OAAOnB,WAAW,CAAChC,IAAI,EAAEmD,IAAI,CAAC,CAACE,KAAK;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,wBAAwBA,CAACtD,IAAI,EAAEmD,IAAI,EAAEI,KAAK,EAAE;EAC1D,IAAIJ,IAAI,IAAII,KAAK,EAAE;IACjB,OAAOA,KAAK,CAACJ,IAAI,CAAC;EACpB;EACA,MAAME,KAAK,GAAGF,IAAI,CACfK,KAAK,CAAC,IAAI,CAAC,CACXC,MAAM,CAAC,CAACC,IAAI,EAAEC,IAAI,KAAKC,IAAI,CAACC,GAAG,CAACH,IAAI,EAAEN,gBAAgB,CAACpD,IAAI,EAAE2D,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;EAC1EJ,KAAK,CAACJ,IAAI,CAAC,GAAGE,KAAK;EACnB,OAAOA,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASS,iBAAiBA,CAACC,SAAS,EAAEC,MAAM,EAAE;EACnD,MAAMC,MAAM,GAAG,EAAE;EACjB,MAAMC,OAAO,GAAG,EAAE;EAClB,MAAMC,UAAU,GAAG,EAAE;EACrB,IAAId,KAAK,GAAG,CAAC;EACb,IAAIe,SAAS,GAAG,CAAC;EACjB,IAAItC,MAAM,GAAG,CAAC;EACd,IAAIG,UAAU,GAAG,CAAC;EAClB,KAAK,IAAIhB,CAAC,GAAG,CAAC,EAAEoD,EAAE,GAAGL,MAAM,CAACjE,MAAM,EAAEkB,CAAC,IAAIoD,EAAE,EAAEpD,CAAC,IAAI,CAAC,EAAE;IACnD,MAAMkC,IAAI,GAAGa,MAAM,CAAC/C,CAAC,CAAC;IACtB,IAAIkC,IAAI,KAAK,IAAI,IAAIlC,CAAC,KAAKoD,EAAE,EAAE;MAC7BhB,KAAK,GAAGO,IAAI,CAACC,GAAG,CAACR,KAAK,EAAEe,SAAS,CAAC;MAClCD,UAAU,CAACG,IAAI,CAACF,SAAS,CAAC;MAC1BA,SAAS,GAAG,CAAC;MACbtC,MAAM,IAAIG,UAAU;MACpBA,UAAU,GAAG,CAAC;MACd;IACF;IACA,MAAMjC,IAAI,GAAGgE,MAAM,CAAC/C,CAAC,GAAG,CAAC,CAAC,IAAI8C,SAAS,CAAC/D,IAAI;IAC5C,MAAMuE,YAAY,GAAGnB,gBAAgB,CAACpD,IAAI,EAAEmD,IAAI,CAAC;IACjDc,MAAM,CAACK,IAAI,CAACC,YAAY,CAAC;IACzBH,SAAS,IAAIG,YAAY;IACzB,MAAMC,aAAa,GAAG5C,iBAAiB,CAAC5B,IAAI,CAAC;IAC7CkE,OAAO,CAACI,IAAI,CAACE,aAAa,CAAC;IAC3BvC,UAAU,GAAG2B,IAAI,CAACC,GAAG,CAAC5B,UAAU,EAAEuC,aAAa,CAAC;EAClD;EACA,OAAO;IAACnB,KAAK;IAAEvB,MAAM;IAAEmC,MAAM;IAAEC,OAAO;IAAEC;EAAU,CAAC;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASM,cAAcA,CAACC,OAAO,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,OAAO,EAAE;EAClE,IAAIF,QAAQ,KAAK,CAAC,EAAE;IAClBD,OAAO,CAACI,SAAS,CAACF,OAAO,EAAEC,OAAO,CAAC;IACnCH,OAAO,CAACK,MAAM,CAACJ,QAAQ,CAAC;IACxBD,OAAO,CAACI,SAAS,CAAC,CAACF,OAAO,EAAE,CAACC,OAAO,CAAC;EACvC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASG,gBAAgBA,CAC9BN,OAAO,EACPO,SAAS,EACTC,OAAO,EACPC,YAAY,EACZC,OAAO,EACPC,OAAO,EACPC,CAAC,EACDC,CAAC,EACDC,CAAC,EACDC,CAAC,EACDC,KAAK,EACL;EACAhB,OAAO,CAACiB,IAAI,CAAC,CAAC;EAEd,IAAIT,OAAO,KAAK,CAAC,EAAE;IACjB,IAAIR,OAAO,CAACkB,WAAW,KAAKxE,SAAS,EAAE;MACrCsD,OAAO,CAACkB,WAAW,GAAIlB,OAAO,IAAMA,OAAO,CAACkB,WAAW,IAAIV,OAAQ;IACrE,CAAC,MAAM;MACLR,OAAO,CAACkB,WAAW,IAAIV,OAAO;IAChC;EACF;EACA,IAAID,SAAS,EAAE;IACbP,OAAO,CAACO,SAAS,CAACY,KAAK,CAACnB,OAAO,EAAEO,SAAS,CAAC;EAC7C;EAEA,IAAI,gBAAkBE,YAAY,CAAEW,mBAAmB,EAAE;IACvD;IACApB,OAAO,CAACI,SAAS,CAACU,CAAC,EAAEC,CAAC,CAAC;IACvBf,OAAO,CAACgB,KAAK,CAACA,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC;IACjCK,wBAAwB,CAAC,oBAAsBZ,YAAY,EAAGT,OAAO,CAAC;EACxE,CAAC,MAAM,IAAIgB,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;IACvC;IACAhB,OAAO,CAACI,SAAS,CAACU,CAAC,EAAEC,CAAC,CAAC;IACvBf,OAAO,CAACgB,KAAK,CAACA,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC;IACjChB,OAAO,CAACsB,SAAS,CACf;IACEb,YAAY,EAEdC,OAAO,EACPC,OAAO,EACPC,CAAC,EACDC,CAAC,EACD,CAAC,EACD,CAAC,EACDD,CAAC,EACDC,CACF,CAAC;EACH,CAAC,MAAM;IACL;IACAb,OAAO,CAACsB,SAAS,CACf;IACEb,YAAY,EAEdC,OAAO,EACPC,OAAO,EACPC,CAAC,EACDC,CAAC,EACDC,CAAC,EACDC,CAAC,EACDH,CAAC,GAAGI,KAAK,CAAC,CAAC,CAAC,EACZH,CAAC,GAAGG,KAAK,CAAC,CAAC,CACb,CAAC;EACH;EAEAhB,OAAO,CAACuB,OAAO,CAAC,CAAC;AACnB;;AAEA;AACA;AACA;AACA;AACA,SAASF,wBAAwBA,CAACG,KAAK,EAAExB,OAAO,EAAE;EAChD,MAAMoB,mBAAmB,GAAGI,KAAK,CAACJ,mBAAmB;EACrD,KAAK,IAAI7E,CAAC,GAAG,CAAC,EAAEoD,EAAE,GAAGyB,mBAAmB,CAAC/F,MAAM,EAAEkB,CAAC,GAAGoD,EAAE,EAAEpD,CAAC,IAAI,CAAC,EAAE;IAC/D,IAAIkF,KAAK,CAACC,OAAO,CAACN,mBAAmB,CAAC7E,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;MAC7CyD,OAAO,CAACoB,mBAAmB,CAAC7E,CAAC,CAAC,CAAC,CAAC4E,KAAK,CACnCnB,OAAO,EACPoB,mBAAmB,CAAC7E,CAAC,GAAG,CAAC,CAC3B,CAAC;IACH,CAAC,MAAM;MACLyD,OAAO,CAACoB,mBAAmB,CAAC7E,CAAC,CAAC,CAAC,GAAG6E,mBAAmB,CAAC7E,CAAC,GAAG,CAAC,CAAC;IAC9D;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}